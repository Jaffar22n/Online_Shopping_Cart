# -*- coding: utf-8 -*-
"""Online Shopping Cart.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uI7A3dIi-qg3589cftKizK7X67cScyU0
"""

class ItemToPurchase:
    def __init__(self, name="none", description="none", price=0, quantity=0):
        self.item_name = name
        self.item_description = description
        self.item_price = price
        self.item_quantity = quantity

    def __str__(self):
        return f"{self.item_name} {self.item_quantity} @ ${self.item_price:.2f} = ${self.item_quantity * self.item_price:.2f}"

    def get_name(self):
        return self.item_name

    def get_description(self):
        return self.item_description

    def get_price(self):
        return self.item_price

    def get_quantity(self):
        return self.item_quantity


class ShoppingCart:
    def __init__(self, name, date):
        self.customer_name = name
        self.current_date = date
        self.cart_items = []

    def get_customer_name(self):
        return self.customer_name

    def get_date(self):
        return self.current_date

    def add_item(self, item):
        self.cart_items.append(item)

    def remove_item(self, name):
        for item in self.cart_items:
            if item.get_name() == name:
                self.cart_items.remove(item)
                return
        print("Item not found in cart. Nothing removed.")

    def modify_item(self, item):
        for i in range(len(self.cart_items)):
            if self.cart_items[i].get_name() == item.get_name():
                self.cart_items[i].item_quantity = item.get_quantity()
                return
        print("Item not found in cart. Nothing modified.")

    def get_num_items_in_cart(self):
        num_items = 0
        for item in self.cart_items:
            num_items += item.get_quantity()
        return num_items

    def get_cost_of_cart(self):
        total_cost = 0
        for item in self.cart_items:
            total_cost += item.get_price() * item.get_quantity()
        return total_cost

    def print_total(self):
        print(f"{self.customer_name}'s Shopping Cart - {self.current_date}")
        print(f"Number of Items: {self.get_num_items_in_cart()}\n")

        for item in self.cart_items:
            print(item)

        print(f"\nTotal: ${self.get_cost_of_cart():.2f}")

    def print_descriptions(self):
        print(f"{self.customer_name}'s Shopping Cart - {self.current_date}\n")
        print("Item Descriptions")
        for item in self.cart_items:
            print(f"{item.get_name()}: {item.get_description()}")


def main():
    customer_name = input("Enter customer's name: ")
    current_date = input("Enter today's date: ")

    cart = ShoppingCart(customer_name, current_date)

    print(f"Customer name: {cart.get_customer_name()}")
    print(f"Today's date: {cart.get_date()}")

    while True:
        print("\nMENU")
        print("a - Add item to cart")
        print("r - Remove item from cart")
        print("c - Change item quantity")
        print("i - Output items' descriptions")
        print("o - Output shopping cart")
        print("q - Quit")

        choice = input("\nChoose an option: ")

        if choice == "a":
            print("ADD ITEM TO CART")
            item_name = input("Enter the item name: ")
            item_description = input("Enter the item description: ")
            item_price = float(input("Enter the item price: "))
            item_quantity = int(input("Enter the item quantity: "))

            item = ItemToPurchase(item_name, item_description, item_price, item_quantity)
            cart.add_item(item)
            print()

        elif choice == "r":
            print("REMOVE ITEM FROM CART")
            item_name = input("Enter name of item to remove: ")
            cart.remove_item(item_name)
            print()

        elif choice == "c":
            print("CHANGE ITEM QUANTITY")
            item_name = input("Enter the item name: ")
            item_quantity = int(input("Enter the new quantity: "))

            item = ItemToPurchase(item_name, quantity=item_quantity)
            cart.modify_item(item)
            print()

        elif choice == "i":
            print("OUTPUT ITEMS' DESCRIPTIONS")
            cart.print_descriptions()
            print()

        elif choice == "o":
            print("OUTPUT SHOPPING CART")
            cart.print_total()
            print()

        elif choice == "q":
            break

        else:
            print("Invalid choice. Please try again.")


if __name__ == "__main__":
    main()